
import telebot
from telebot import types
import sqlite3
from sqlite3 import Error
import telegram
import qrcode
from io import BytesIO
from datetime import date



TOKEN = '698801737:AAE4bn6E1aO1FfSsWoUbBG67-HUr6JPnO8s'
bot = telebot.TeleBot(TOKEN)

""""today = date.today()
x = str(today).split("-")
cur_month = x[1]
cur_day = x[2]
serial_num = '1'+cur_day+cur_month+'9'
"""


import os
from flask import Flask

app = Flask(__name__)

'''print(serial_num)
'''
"""--------------/START------------"""



def create_connection(db_file):
	conn = None
	try:
		conn = sqlite3.connect(db_file)
		return conn
	except Error as e:
		print(e)
 
	return conn



def do_query(db,sql_query):
	try:
		conn = create_connection(db)
		c = conn.cursor()
		c.execute(sql_query)
		conn.commit()
		c.close()
		conn.close()
	except Error as e:
		print(e)


def select_from(db, sql_query):
	try:
		conn = create_connection(db)
		cur = conn.cursor()
		cur.execute(sql_query)
		rows = cur.fetchall()
		conn.commit()
		cur.close()
		conn.close()
		return rows
	except Error as e:
		print(e)


#VARIABLES
db = r"Botdb.db"
table_create = """ CREATE TABLE IF NOT EXISTS clients (
			chat_id VARCHAR(255) UNIQUE NOT NULL,
			name VARCHAR(255) NULL,
			surname VARCHAR(255) NULL,
			sex VARCHAR(255) NULL,
			birth_date VARCHAR(255) NULL
		); """
check_tables = " SELECT * FROM clients;"


do_query(db,table_create)
'''print(select_from(db,check_tables))
'''

@bot.message_handler(commands=['start'])
def send_welcome(message):
	query = "SELECT * FROM clients  WHERE chat_id = " + str(message.from_user.id) + ";"
	rows = select_from(db,query)
	if rows != None and len(rows)>0:
		for i in rows:
			if i[1] == '':
				bot.send_message(message.from_user.id, "–í –ø—Ä–æ—à–ª—ã–π —Ä–∞–∑ –≤—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ —Å–≤–æ–µ –∏–º—è. –£–∫–∞–∂–∏—Ç–µ –≤–∞—à–µ –∏–º—è.");
				bot.register_next_step_handler(message, get_name);
			elif i[2] == '':
				bot.send_message(message.from_user.id, "–í –ø—Ä–æ—à–ª—ã–π —Ä–∞–∑ –≤—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ —Å–≤–æ–µ —Ñ–∞–º–∏–ª–∏—é. –£–∫–∞–∂–∏—Ç–µ –≤–∞—à—É —Ñ–∞–º–∏–ª–∏—é.");
				bot.register_next_step_handler(message, get_surname);
			elif i[3] == '':
				bot.send_message(message.from_user.id, "–í –ø—Ä–æ—à–ª—ã–π —Ä–∞–∑ –≤—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ —Å–≤–æ–π –ø–æ–ª. –£–∫–∞–∂–∏—Ç–µ –≤–∞—à –ø–æ–ª –±—É–∫–≤–æ–π –ú –∏–ª–∏ –ñ.");
				bot.register_next_step_handler(message, get_sex);
			elif i[4] == '':
				bot.send_message(message.from_user.id, "–í –ø—Ä–æ—à–ª—ã–π —Ä–∞–∑ –≤—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ —Å–≤–æ—é –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è. –£–∫–∞–∂–∏—Ç–µ –≤–∞—à—É –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì.");
				bot.register_next_step_handler(message, start_handler);
			else:
				open_menu(message);
				

			if len(rows) > 1:
				break
		
	else:
		bot.reply_to(
			message,
			'–ü—Ä–∏–≤–µ—Ç!\n–Ø –ë–æ—Ç SUN TEA! –í—ã –≤–ø–µ—Ä–≤—ã–µ —É –Ω–∞—Å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø—Ä–æ–π–¥–∏—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é');
		query = "INSERT INTO clients(chat_id,name,surname,sex,birth_date) VALUES (" + str(message.from_user.id) + ",'','','','')"
		do_query(db,query)
		bot.send_message(message.from_user.id, "–ö–∞–∫ –≤–∞—Å –∑–æ–≤—É—Ç?");
		bot.register_next_step_handler(message, get_name);


"""--------------/REGISTRATION------------"""


def get_name(message):  # –ø–æ–ª—É—á–∞–µ–º —Ñ–∞–º–∏–ª–∏—é
	name = message.text;
	query = " UPDATE clients SET name = '" + str(name) + "' WHERE chat_id = " + str(message.from_user.id) + " ;"
	do_query(db,query)
	bot.send_message(message.from_user.id, '–ö–∞–∫–∞—è —É –≤–∞—Å —Ñ–∞–º–∏–ª–∏—è?');
	bot.register_next_step_handler(message, get_surname);


def get_surname(message):
	surname = message.text;
	query = " UPDATE clients SET surname = '" + str(surname) + "' WHERE chat_id = " + str(message.from_user.id) + " ;"
	do_query(db,query)
	bot.send_message(message.from_user.id, '–£–∫–∞–∂–∏—Ç–µ –≤–∞—à –ø–æ–ª –±—É–∫–≤–æ–π M –∏–ª–∏ –ñ');
	bot.register_next_step_handler(message, get_sex);


def get_sex(message):
	sex= message.text;
	query = " UPDATE clients SET sex = '" + str(sex) + "' WHERE chat_id = " + str(message.from_user.id) + " ;"
	do_query(db,query)
	bot.send_message(
	message.from_user.id,
	 '–£–∫–∞–∂–∏—Ç–µ –≤–∞—à –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è.\n–í–≤–µ–¥–∏—Ç–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì\n–ù–∞–ø—Ä–∏–º–µ—Ä: 12.10.1999');
	bot.register_next_step_handler(message, start_handler);



def start_handler(message):
	try:
		age = message.text;
		agesplit=age.split(".")
		print(agesplit)
		user_day = agesplit[0]
		user_month = agesplit[1]
		user_year = agesplit [2]

		if user_day.isdigit() == True and user_month.isdigit() == True and user_year.isdigit() == True:
			query = " UPDATE clients SET birth_date = '" + str(age) + "' WHERE chat_id = " + str(message.from_user.id) + " ;"
			do_query(db,query)
			bot.send_message(message.from_user.id, f'–°–ø–∞—Å–∏–±–æ, –¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã. –ù–∞–∂–º–∏—Ç–µ /start')

		else:
			bot.send_message(message.from_user.id, f'–í—ã –Ω–µ –≤–µ—Ä–Ω–æ –≤–≤–µ–ª–∏ –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ —É–∫–∞–∂–∏—Ç–µ –µ–≥–æ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì.\n–ù–∞–ø—Ä–∏–º–µ—Ä: 12.10.1999 ')
			bot.register_next_step_handler(message, start_handler);

	except:
		print("An exception occurred")
		bot.send_message(message.from_user.id, f'–í—ã –Ω–µ –≤–µ—Ä–Ω–æ –≤–≤–µ–ª–∏ –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ —É–∫–∞–∂–∏—Ç–µ –µ–≥–æ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì.\n–ù–∞–ø—Ä–∏–º–µ—Ä: 12.10.1999 ')
		bot.register_next_step_handler(message, start_handler);



"""--------------/REGISTRATION------------"""


def qrgenerate(user_id):
	global qr
	qr = qrcode.QRCode(
		version=1,
		box_size=15,
		border=5
	)
	qr_query="SELECT name,surname from clients WHERE chat_id = " + str(user_id) +';'
	rows = select_from(db,qr_query)
	for values in rows:
		for i in values:
			name = values[0]
			surname = values[1]

	data ="SUNTEAQR"+serial_num + surname + ' ' + name
	qr.add_data(data)
	qr.make(fit=True)
	img = qr.make_image(fill='black', back_color='white')

	bio = BytesIO()
	bio.name = 'qr.jpeg'
	img.save(bio, 'JPEG')
	bio.seek(0)
	return bio




@bot.message_handler(content_types=['text'])
def get_text_menu(message):
	if message.text == "üì≤ –ü–æ–ª—É—á–∏—Ç—å —Å–∫–∏–¥–∫—É":
		try:
			bot.send_photo(message.from_user.id, 'https://ibb.co/wshz8hb')
			bot.send_message(message.from_user.id,"–ü—Ä–µ–¥—å—è–≤–∏—Ç–µ qr-–∫–æ–¥ –∫–∞—Å—Å–∏—Ä—É –∏ –ø–æ–ª—É—á–∏—Ç–µ —Å–∫–∏–¥–∫—É 7%.")
		except Error as e:
			print(e)
		"""bot.send_photo(message.from_user.id, photo=qrgenerate(message.from_user.id))"""
		
	elif message.text == "üìë –ú–µ–Ω—é SunTea":
		try:
			bot.send_photo(message.from_user.id, 'https://ibb.co/ydCZJpT')
		except Error as e:
			print(e)
	elif message.text == "üìû–ö–æ–Ω—Ç–∞–∫—Ç—ã SunTea":
		bot.send_message(message.from_user.id, """https://suntea.kz\n\ninstagram.com/sunteakz\n\ninfo@suntea.kz\n\n8 (727)317-07-44\n\n2–π —ç—Ç–∞–∂, –¢–†–¶ –°–ø—É—Ç–Ω–∏–∫, –ê–ª–º–∞—Ç—ã, –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω""" );
	elif message.text == "üçπ–ê–∫—Ü–∏–∏ SunTea":
		try:
			bot.send_photo(message.from_user.id, 'https://ibb.co/RTQGxsm')
			bot.send_message(message.from_user.id,"500 KZT.")
			bot.send_photo(message.from_user.id, 'https://ibb.co/DrvWBpg')
			bot.send_message(message.from_user.id,"1100 KZT.")
			bot.send_photo(message.from_user.id, 'https://ibb.co/BLM51D6')
			bot.send_message(message.from_user.id,"500 KZT.")
		except Error as e:
			print(e)
		
	elif message.text == "üìã–£—Å–ª–æ–≤–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏":
		bot.send_message(message.from_user.id, """–í—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å —Å–∫–∏–¥–∫—É –≤ —Ä–∞–∑–º–µ—Ä–µ 7% –Ω–∞ –∫–∞–∂–¥—É—é –ø–æ–∫—É–ø–∫—É.\n–£—Å–ª–æ–≤–∏—è –Ω–∞—à–µ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏, –ø—Ä–æ–π–¥–∏ –æ–¥–∏–Ω —Ä–∞–∑ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –≤ —á–∞—Ç-–±–æ—Ç–µ Telegram, –ø–æ–ª—É—á–∞–π —Å–∫–∏–¥–∫—É 7% –ø—Ä–∏ –∫–∞–∂–¥–æ–π –æ–ø–ª–∞—Ç–µ.\n
–ü–µ—Ä–≤—ã–º —É–∑–Ω–∞–≤–∞–π –æ–± –∞–∫—Ü–∏—è—Ö –∏ —Å–∫–∏–¥–∫–∞—Öüî• –í–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Å–∫–∏–¥–∫–æ–π –º–æ–≥—É—Ç —Ç–æ–ª—å–∫–æ  –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ–∫—É–ø–∞—Ç–µ–ª–∏ –≤ –Ω–∞—à–µ–º —á–∞—Ç –±–æ—Ç–µ""" );
	elif message.text == "/help":
		bot.send_message(message.from_user.id, "–î–ª—è –±–æ–ª–µ–µ —É–¥–æ–±–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –Ω–∞—à–∏–º –±–æ—Ç–æ–º, –º—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤–∞–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–Ω–æ–ø–∫–∏" );
	else:
		bot.send_message(message.from_user.id, "–Ø –≤–∞—Å –Ω–µ –ø–æ–Ω–∏–º–∞—é. –ù–∞–ø–∏—à–∏—Ç–µ /start –∏–ª–∏ /help")



def open_menu(message):
	bot.send_message(message.from_user.id, "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç SUN TEA")
	markup = types.ReplyKeyboardMarkup(row_width=1)
	itembtn1 = types.KeyboardButton('üì≤ –ü–æ–ª—É—á–∏—Ç—å —Å–∫–∏–¥–∫—É')
	itembtn2 = types.KeyboardButton('üìë –ú–µ–Ω—é SunTea')
	itembtn3 = types.KeyboardButton('üìû–ö–æ–Ω—Ç–∞–∫—Ç—ã SunTea')
	itembtn4 = types.KeyboardButton('üçπ–ê–∫—Ü–∏–∏ SunTea')
	itembtn5 = types.KeyboardButton('üìã–£—Å–ª–æ–≤–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏')
	markup.add(itembtn1, itembtn2, itembtn3,itembtn4,itembtn5)
	bot.send_message(message.from_user.id, " –í—ã–±–µ—Ä–∏—Ç–µ –∏–∑ –º–µ–Ω—é:", reply_markup=markup)

"""def birth_date_notifier(message):
	qr_query="SELECT chat_id from clients WHERE chat_id = " + str(user_id) +';'

"""


bot.polling(none_stop=True, interval=0)

if __name__ == "__main__":
    port = int(os.environ.get("PORT", 5000))
    app.run(host='0.0.0.0', port=port)